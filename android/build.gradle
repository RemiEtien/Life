buildscript {
    ext.kotlin_version = '2.1.0'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // UPDATED: AGP 8.7+ for better 16KB page size support
        classpath 'com.android.tools.build:gradle:8.7.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    
    // ДОБАВЛЕНО: JVM Toolchain для всех подпроектов (включая внешние пакеты)
    afterEvaluate { project ->
        // Специальная конфигурация для workmanager (принудительно)
        if (project.name == 'workmanager') {
            try {
                project.android {
                    compileOptions {
                        sourceCompatibility JavaVersion.VERSION_17
                        targetCompatibility JavaVersion.VERSION_17
                    }
                    kotlinOptions {
                        jvmTarget = '17'
                    }
                }
                project.kotlin {
                    jvmToolchain(17)
                }
            } catch (Exception e) {
                println "Warning: Failed to configure workmanager: ${e.message}"
            }
        }

        // Применяем ко всем проектам с Kotlin
        if (project.plugins.hasPlugin('org.jetbrains.kotlin.android') ||
            project.plugins.hasPlugin('kotlin-android') ||
            project.plugins.hasPlugin('org.jetbrains.kotlin.jvm')) {

            try {
                project.kotlin {
                    jvmToolchain(17)
                }
            } catch (Exception ignored) {}

            // Дополнительно устанавливаем kotlinOptions для совместимости
            if (project.hasProperty('android')) {
                project.android {
                    kotlinOptions {
                        jvmTarget = '17'
                    }
                }
            }
        }

        // Применяем ко всем Android проектам
        if (project.plugins.hasPlugin('com.android.application') ||
            project.plugins.hasPlugin('com.android.library')) {
            project.android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                // Убеждаемся, что kotlinOptions установлен
                try {
                    kotlinOptions {
                        jvmTarget = '17'
                    }
                } catch (Exception ignored) {}
            }
        }

        // Для Java-only проектов
        if (project.plugins.hasPlugin('java-library') ||
            project.plugins.hasPlugin('java')) {
            project.java {
                toolchain {
                    languageVersion = JavaLanguageVersion.of(17)
                }
            }
        }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}